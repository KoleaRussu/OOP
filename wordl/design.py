# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'temp.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys
import os
import win32api
import win32print
from PyQt5 import QtCore, QtGui, QtWidgets
from docx import Document
from docx.shared import Inches
from docx.shared import Pt
from docx.enum.style import WD_STYLE_TYPE


class Ui_MainWindow(object):
    def __init__(self, MainWindow):
        self.document = Document()
        self.saved = False
        self.styles = 0
        self.paragraph = None

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1073, 689)
        MainWindow.setStyleSheet("background-color: rgb(170, 255, 127);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.FontFamil = QtWidgets.QFontComboBox(self.centralwidget)
        self.FontFamil.setEnabled(False)
        self.FontFamil.setGeometry(QtCore.QRect(530, 120, 171, 22))
        self.FontFamil.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);")
        self.FontFamil.setObjectName("FontFamil")
        self.Heading_lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.Heading_lineEdit.setGeometry(QtCore.QRect(260, 70, 441, 41))
        self.Heading_lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.Heading_lineEdit.setObjectName("Heading_lineEdit")
        self.HeadingText = QtWidgets.QLabel(self.centralwidget)
        self.HeadingText.setGeometry(QtCore.QRect(260, 30, 151, 31))
        self.HeadingText.setStyleSheet("color: rgb(170, 0, 0);\n"
"font: 75 20pt \"Budmo Jiggler\";")
        self.HeadingText.setObjectName("HeadingText")
        self.HeadingButton = QtWidgets.QPushButton(self.centralwidget)
        self.HeadingButton.setGeometry(QtCore.QRect(710, 70, 151, 41))
        self.HeadingButton.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"font: 75 10pt \"Budmo Jiggler\";")
        self.HeadingButton.setObjectName("HeadingButton")
        self.Bold = QtWidgets.QRadioButton(self.centralwidget)
        self.Bold.setGeometry(QtCore.QRect(260, 120, 82, 17))
        self.Bold.setObjectName("Bold")
        self.Italic = QtWidgets.QRadioButton(self.centralwidget)
        self.Italic.setGeometry(QtCore.QRect(310, 120, 82, 17))
        self.Italic.setObjectName("Italic")
        self.Underline = QtWidgets.QRadioButton(self.centralwidget)
        self.Underline.setGeometry(QtCore.QRect(360, 120, 82, 17))
        self.Underline.setObjectName("Underline")
        self.FontSize = QtWidgets.QComboBox(self.centralwidget)
        self.FontSize.setGeometry(QtCore.QRect(450, 120, 69, 22))
        sizes = ['8', '10', '12', '14', '16', '18', '20', '22', '24']
        self.FontSize.addItems(sizes)
        self.FontSize.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.FontSize.setObjectName("FontSize")
        self.AddRunButton = QtWidgets.QPushButton(self.centralwidget)
        self.AddRunButton.setGeometry(QtCore.QRect(710, 120, 151, 21))
        self.AddRunButton.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"font: 75 10pt \"Budmo Jiggler\";")
        self.AddRunButton.setObjectName("AddRunButton")
        self.Text_lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.Text_lineEdit.setGeometry(QtCore.QRect(260, 200, 441, 111))
        self.Text_lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.Text_lineEdit.setObjectName("Text_lineEdit")
        self.AddParagButton = QtWidgets.QPushButton(self.centralwidget)
        self.AddParagButton.setGeometry(QtCore.QRect(260, 320, 441, 31))
        self.AddParagButton.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"font: 75 15pt \"Budmo Jiggler\";")
        self.AddParagButton.setObjectName("AddParagButton")
        self.TextText = QtWidgets.QLabel(self.centralwidget)
        self.TextText.setGeometry(QtCore.QRect(260, 160, 191, 31))
        self.TextText.setStyleSheet("color: rgb(170, 0, 0);\n"
"font: 75 20pt \"Budmo Jiggler\";")
        self.TextText.setObjectName("TextText")
        self.Imagepath_lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.Imagepath_lineEdit.setGeometry(QtCore.QRect(260, 400, 441, 41))
        self.Imagepath_lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.Imagepath_lineEdit.setObjectName("Imagepath_lineEdit")
        self.Imagepathtext = QtWidgets.QLabel(self.centralwidget)
        self.Imagepathtext.setGeometry(QtCore.QRect(260, 360, 191, 31))
        self.Imagepathtext.setStyleSheet("color: rgb(170, 0, 0);\n"
"font: 75 20pt \"Budmo Jiggler\";")
        self.Imagepathtext.setObjectName("Imagepathtext")
        self.AddImageButton = QtWidgets.QPushButton(self.centralwidget)
        self.AddImageButton.setGeometry(QtCore.QRect(710, 400, 151, 41))
        self.AddImageButton.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"font: 75 10pt \"Budmo Jiggler\";")
        self.AddImageButton.setObjectName("AddImageButton")
        self.AddpageButton = QtWidgets.QPushButton(self.centralwidget)
        self.AddpageButton.setGeometry(QtCore.QRect(710, 200, 151, 51))
        self.AddpageButton.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"font: 75 10pt \"Budmo Jiggler\";")
        self.AddpageButton.setObjectName("AddpageButton")
        self.AddtableButton = QtWidgets.QPushButton(self.centralwidget)
        self.AddtableButton.setGeometry(QtCore.QRect(710, 260, 151, 51))
        self.AddtableButton.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"font: 75 10pt \"Budmo Jiggler\";")
        self.AddtableButton.setObjectName("AddtableButton")
        self.Path_lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.Path_lineEdit.setGeometry(QtCore.QRect(260, 490, 441, 41))
        self.Path_lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.Path_lineEdit.setObjectName("Path_lineEdit")
        self.Path_lineEdit.setText("d:/Users/User/Desktop/Word/text.docx")
        self.PatgText = QtWidgets.QLabel(self.centralwidget)
        self.PatgText.setGeometry(QtCore.QRect(260, 450, 171, 31))
        self.PatgText.setStyleSheet("color: rgb(170, 0, 0);\n"
"font: 75 20pt \"Budmo Jiggler\";")
        self.PatgText.setObjectName("PatgText")
        self.SaveButton = QtWidgets.QPushButton(self.centralwidget)
        self.SaveButton.setGeometry(QtCore.QRect(260, 540, 131, 41))
        self.SaveButton.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"font: 75 10pt \"Budmo Jiggler\";")
        self.SaveButton.setObjectName("SaveButton")
        self.SaveOpenButton = QtWidgets.QPushButton(self.centralwidget)
        self.SaveOpenButton.setGeometry(QtCore.QRect(420, 540, 131, 41))
        self.SaveOpenButton.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"font: 75 10pt \"Budmo Jiggler\";")
        self.SaveOpenButton.setObjectName("SaveOpenButton")
        self.pushButton_9 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_9.setGeometry(QtCore.QRect(580, 540, 121, 41))
        self.pushButton_9.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"font: 75 10pt \"Budmo Jiggler\";")
        self.pushButton_9.setObjectName("pushButton_9")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1073, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.HeadingButton.clicked.connect(lambda: self.add_heading())
        self.AddParagButton.clicked.connect(lambda: self.add_paragh())
        self.AddRunButton.clicked.connect(lambda: self.add_Run())
        self.AddImageButton.clicked.connect(lambda: self.add_image())
        self.AddpageButton.clicked.connect(lambda: self.add_Page())
        self.SaveButton.clicked.connect(lambda: self.save_Button())
        self.SaveOpenButton.clicked.connect(lambda: self.save_open_button())
        self.pushButton_9.clicked.connect(lambda: self.print_button())
        self.AddtableButton.clicked.connect(lambda: self.add_table())

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.HeadingText.setText(_translate("MainWindow", "Heading"))
        self.HeadingButton.setText(_translate("MainWindow", "Add Heading"))
        self.Bold.setText(_translate("MainWindow", "Bold"))
        self.Italic.setText(_translate("MainWindow", "Italic"))
        self.Underline.setText(_translate("MainWindow", "Underline"))
        self.AddRunButton.setText(_translate("MainWindow", "Change text"))
        self.AddParagButton.setText(_translate("MainWindow", " ADD PARAGRAPH"))
        self.TextText.setText(_translate("MainWindow", "Paragraph"))
        self.Imagepathtext.setText(_translate("MainWindow", "Image Path"))
        self.AddImageButton.setText(_translate("MainWindow", "ADD IMAGE"))
        self.AddpageButton.setText(_translate("MainWindow", "ADD PAGE BRAKE"))
        self.AddtableButton.setText(_translate("MainWindow", "ADD TABLE"))
        self.PatgText.setText(_translate("MainWindow", "Directory"))
        self.SaveButton.setText(_translate("MainWindow", "Save"))
        self.SaveOpenButton.setText(_translate("MainWindow", "SAve and open"))
        self.pushButton_9.setText(_translate("MainWindow", "Print"))

    def add_heading(self):
        heading = self.Heading_lineEdit.text()
        self.document.add_heading(heading, 1)
        self.Heading_lineEdit.setText('')
    def add_paragh(self):
        text = self.Text_lineEdit.text()
        self.paragraph = self.document.add_paragraph(text)
        self.Text_lineEdit.setText('')
    def add_Run(self):
        font_styles = self.document.styles
        style_name = 'ProgramStyle' + str(self.styles)
        font_charstyle = font_styles.add_style(style_name, WD_STYLE_TYPE.CHARACTER)
        font_object = font_charstyle.font
        font_object.size = Pt(int(self.FontSize.currentText()))
        font_object.name = self.FontFamil.currentText()
        text = self.Text_lineEdit.text()
        if text:
            run = self.paragraph.add_run(text)
            run.style = style_name
            run.bold = self.Bold.isChecked()
            run.italic = self.Italic.isChecked()
            run.underline = self.Underline.isChecked()
            self.styles += 1
            self.Text_lineEdit.setText('')
            self.Bold.setChecked(False)
            self.Italic.setChecked(False)
            self.Underline.setChecked(False)
    def add_image(self):
        image = self.Imagepath_lineEdit.text()
        if image:
            self.document.add_picture(image, width=Inches(5), height=Inches(5))
            self.Imagepath_lineEdit.setText('')
    def add_Page(self):
        self.document.add_page_break()

    def save_Button(self):
        path = self.Path_lineEdit.text()
        if path:
            self.document.save(path)
            self.saved = True
    def save_open_button(self):
        path = self.Path_lineEdit.text()
        if path:
            self.document.save(path)
            self.saved = True
            os.startfile(path)
    def print_button(self):
        path = self.Path_lineEdit.text()
        if self.saved and path:
            win32api.ShellExecute(0, "print", path, win32print.GetDefaultPrinter(), ".", 0)
    def add_table(self):
        table = self.document.add_table(rows=5, cols=5)
        table.style = "Colorful List"
        for row in range(5):
            for col in range(5):
                cell = table.cell(row, col)
                cell.text = str(row + 2) + str(col + 2)

if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

